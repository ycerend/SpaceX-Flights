// Generated by data binding compiler. Do not edit!
package com.example.flightspacex.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.flightspacex.R;
import com.example.flightspacex.data.models.HistoricalEvent;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class SingleEventDisplayFragmentBinding extends ViewDataBinding {
  @NonNull
  public final TextView eventDetails;

  @NonNull
  public final TextView eventLinksArticle;

  @NonNull
  public final TextView eventLinksWiki;

  @NonNull
  public final TextView eventTime;

  @NonNull
  public final TextView name;

  @Bindable
  protected HistoricalEvent mHistoricalEvent;

  protected SingleEventDisplayFragmentBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView eventDetails, TextView eventLinksArticle,
      TextView eventLinksWiki, TextView eventTime, TextView name) {
    super(_bindingComponent, _root, _localFieldCount);
    this.eventDetails = eventDetails;
    this.eventLinksArticle = eventLinksArticle;
    this.eventLinksWiki = eventLinksWiki;
    this.eventTime = eventTime;
    this.name = name;
  }

  public abstract void setHistoricalEvent(@Nullable HistoricalEvent historicalEvent);

  @Nullable
  public HistoricalEvent getHistoricalEvent() {
    return mHistoricalEvent;
  }

  @NonNull
  public static SingleEventDisplayFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_event_display_fragment, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static SingleEventDisplayFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<SingleEventDisplayFragmentBinding>inflateInternal(inflater, R.layout.single_event_display_fragment, root, attachToRoot, component);
  }

  @NonNull
  public static SingleEventDisplayFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.single_event_display_fragment, null, false, component)
   */
  @NonNull
  @Deprecated
  public static SingleEventDisplayFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<SingleEventDisplayFragmentBinding>inflateInternal(inflater, R.layout.single_event_display_fragment, null, false, component);
  }

  public static SingleEventDisplayFragmentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static SingleEventDisplayFragmentBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (SingleEventDisplayFragmentBinding)bind(component, view, R.layout.single_event_display_fragment);
  }
}
